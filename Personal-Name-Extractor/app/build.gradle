/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'project-report'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'nz.ac.waikato.cms.weka:weka-stable:3.8.6'
}

application {
    // Define the main class for the application.
    mainClass = 'edu.odu.cs350.Cataloger'
    
}

run {
    main = "edu.odu.cs350.Cataloger"
    standardInput = System.in
}

javadoc {
    options.with {
     links 'https://docs.oracle.com/javase/8/docs/api/', 'gradle/javadocs/jdk'
   }
   failOnError = false;
}

build.dependsOn javadoc

test {
    reports {
        html.enabled = true
    }
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    manifest {
        attributes 'Implementation-Title': 'PNE',
           'Implementation-Version': '1.0',
            'Main-Class': 'edu.odu.cs350.Cataloger'
    }
    from { configurations.runtimeClasspath.collect {
        it.isDirectory() ? it : !it.path.endsWith('.pom') ? zipTree(it) : it } }
}
         
check.dependsOn htmlDependencyReport 

task copyWebPages (type: Copy) {
    from 'src/main/html'
    into 'build/reports'
}

task copyDocs (type: Copy) {
    from 'build/docs'
    into 'build/reports/docs'
    dependsOn 'javadoc'
}

task buildSite (dependsOn: ['javadoc', 'check',
                      'copyWebPages', 'copyDocs']) {
    description 'Generate reports website for this project'
}

build.dependsOn buildSite
